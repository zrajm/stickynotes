-*- org -*-

* TODO Sessions
  Should automatically be created when invoked. Use hashlocation to initiate
  one.
* TODO Sync full state at time intervals
  Should check occasionally that everything is up-to-date with server, so that
  if notes get fucked up they auto-adjust after some time interval. (A checksum
  ping?)
* TODO Send initial state in one chunk
  Even with fifty notes, each using up 5KB this would only mean a 250KB body in
  the response, which would be acceptable.

  Typical note sizes are ~100B (note lack of "K" there!) in which case 50 notes
  (a pretty extreme case!) is about *5KB* is size!

  "Keyframes" could also be sent this way.
* TODO inotifywait issue?
  It seems that stickynotes sometimes leave inotifywait processes behind.
  (Maybe on reload?) Could this be remedied? (Maybe by running with
  `inotifywait &` then trapping signals and `wait`ing, and killing it hard
  stdin disappears/SIGHUP is received?
* TODO Elliminate memory leaks
* TODO Merge delete.cgi, get.cgi and put.cgi into one script
* TODO Add some credits on screen
  Link to github + my name + license
* TODO Better separation between server & notes
  The parsing of server response, and putting into note cache should not be
  inside the note cache module.
* TODO Lock note for which server connection has been lost
  Make it transparent & disable draggability?
* TODO Lock note that is being moved by other client
  Make it transparent & disable draggability?
* TODO Proper, random sticky IDs
* TODO No events on notes, instead capture them on <main>
* TODO Normalize screen positions
  If the screen consists of "virtual pixels" etc. 10.000x10.00 pixels, which we
  rescale all coordinates to internally, we could then do the same on all
  clients and enjoy a "resolution free" screen, without the client having to
  tell the server which resolution its running at any point.
* TODO BUGFIX: Place cursor anywhere in text
  Currently cursor can only be placed at beginning of text inside the
  stickynotes, this is caused by the jQuery UI 'draggable' effect somehow. Will
  probably have to reimplement the draggable (and drop jQuery UI?) to fix this.
* TODO Handle '504 (Gateway Timeout)'
  in GET http://localhost/stickynotes/poll.cgi
* SOMEDAY/MAYBE
** TODO Resizeable(?)
* FINISHED
** DONE Load stickynotes on startup
   CLOSED: [2015-05-02 Sat 00:05]
** DONE Store/load coords of stickynotes
   CLOSED: [2015-05-02 Sat 00:05]
** DONE Not move outside screen
   CLOSED: [2015-05-02 Sat 00:05]
** DONE Update stickynotes on remote change
   CLOSED: [2015-05-02 Sat 15:17]
** DONE Dragging should only affect dragged item
   CLOSED: [2015-05-02 Sat 21:24]
   jQuery UI 'stack'ing shouldn't be used when dragging, as this forces updates
   of all stickynotes.
** DONE Slightly rotated stickynotes
   CLOSED: [2015-05-02 Sat 22:21]
   Do this randomly on reload.

       -webkit-transform: rotate(XXdeg);

   where XX is a random number between 5.0 and -5.0
** DONE Favicon
   CLOSED: [2015-05-03 Sun 00:37]
** DONE Note cache should be a module
   CLOSED: [2015-05-03 Sun 02:23]
** DONE Note cache should automatically push to server
   CLOSED: [2015-05-03 Sun 05:48]
** DONE Note cache should automatically update dump in background
   CLOSED: [2015-05-03 Sun 05:48]
   A hook/callback to be invoked whenever the note cache contents change (for
   updating the JSON in the background), and maybe initialize push to server.
** DONE Note cache should do implicit .init() in make function
   CLOSED: [2015-05-03 Sun 17:35]
** DONE Note cache should automatically do long poll from server
   CLOSED: [2015-05-03 Sun 17:35]
** DONE Code should pass (old) jslint
   CLOSED: [2015-05-03 Sun 20:47]
** DONE Context menu
   CLOSED: [2015-05-04 Mon 00:22]
** DONE Right-click for color change
   CLOSED: [2015-05-04 Mon 03:37]
** DONE Creating notes
   CLOSED: [2015-05-04 Mon 03:38]
** DONE Deleting notes
   CLOSED: [2015-05-04 Mon 06:39]
** DONE Load list of stickynotes from server too
   CLOSED: [2015-05-04 Mon 08:35]
** DONE Ignore events caused by self
   CLOSED: [2015-05-05 tis 19:42]
   When a note is updated, an event is pushed to the server. This event is then
   returned to the client in the poll, and applied again. Each client should put
   a session ID into the data passed to the server, and ignore all polled events
   which has its own session ID.

   FIXES BUG: Poll updating caused the cursor repeatedly to move to first
   position in text when editing a note (this as the note was redrawn upon
   receiving the poll of its modification from the server).
